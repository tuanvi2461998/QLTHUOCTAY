<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="QLTHUOCTAYDataSetDVT" targetNamespace="http://tempuri.org/QLTHUOCTAYDataSetDVT.xsd" xmlns:mstns="http://tempuri.org/QLTHUOCTAYDataSetDVT.xsd" xmlns="http://tempuri.org/QLTHUOCTAYDataSetDVT.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="QLTHUOCTAYConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="QLTHUOCTAYConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TestGD.Properties.Settings.GlobalReference.Default.QLTHUOCTAYConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DONVITableAdapter" GeneratorDataComponentClassName="DONVITableAdapter" Name="DONVI" UserDataComponentName="DONVITableAdapter">
            <MainSource>
              <DbSource ConnectionRef="QLTHUOCTAYConnectionString (Settings)" DbObjectName="QLTHUOCTAY.dbo.DONVI" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DONVI] WHERE (([maDonVi] = @Original_maDonVi) AND ([tenDonVi] = @Original_tenDonVi))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_maDonVi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="maDonVi" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_tenDonVi" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="tenDonVi" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DONVI] ([maDonVi], [tenDonVi]) VALUES (@maDonVi, @tenDonVi);
SELECT maDonVi, tenDonVi FROM DONVI WHERE (maDonVi = @maDonVi)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@maDonVi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="maDonVi" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@tenDonVi" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="tenDonVi" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT maDonVi, tenDonVi FROM dbo.DONVI</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DONVI] SET [maDonVi] = @maDonVi, [tenDonVi] = @tenDonVi WHERE (([maDonVi] = @Original_maDonVi) AND ([tenDonVi] = @Original_tenDonVi));
SELECT maDonVi, tenDonVi FROM DONVI WHERE (maDonVi = @maDonVi)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@maDonVi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="maDonVi" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@tenDonVi" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="tenDonVi" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_maDonVi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="maDonVi" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_tenDonVi" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="tenDonVi" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="maDonVi" DataSetColumn="maDonVi" />
              <Mapping SourceColumn="tenDonVi" DataSetColumn="tenDonVi" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="QLTHUOCTAYDataSetDVT" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="QLTHUOCTAYDataSetDVT" msprop:Generator_UserDSName="QLTHUOCTAYDataSetDVT">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DONVI" msprop:Generator_TableClassName="DONVIDataTable" msprop:Generator_TableVarName="tableDONVI" msprop:Generator_TablePropName="DONVI" msprop:Generator_RowDeletingName="DONVIRowDeleting" msprop:Generator_RowChangingName="DONVIRowChanging" msprop:Generator_RowEvHandlerName="DONVIRowChangeEventHandler" msprop:Generator_RowDeletedName="DONVIRowDeleted" msprop:Generator_UserTableName="DONVI" msprop:Generator_RowChangedName="DONVIRowChanged" msprop:Generator_RowEvArgName="DONVIRowChangeEvent" msprop:Generator_RowClassName="DONVIRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="maDonVi" msprop:Generator_ColumnVarNameInTable="columnmaDonVi" msprop:Generator_ColumnPropNameInRow="maDonVi" msprop:Generator_ColumnPropNameInTable="maDonViColumn" msprop:Generator_UserColumnName="maDonVi" type="xs:int" />
              <xs:element name="tenDonVi" msprop:Generator_ColumnVarNameInTable="columntenDonVi" msprop:Generator_ColumnPropNameInRow="tenDonVi" msprop:Generator_ColumnPropNameInTable="tenDonViColumn" msprop:Generator_UserColumnName="tenDonVi">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DONVI" />
      <xs:field xpath="mstns:maDonVi" />
    </xs:unique>
  </xs:element>
</xs:schema>